// Code generated by MockGen. DO NOT EDIT.
// Source: failless/internal/pkg/vote (interfaces: Repository)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "failless/internal/pkg/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// AddEventVote mocks base method
func (m *MockRepository) AddEventVote(arg0, arg1 int, arg2 int8) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddEventVote", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddEventVote indicates an expected call of AddEventVote
func (mr *MockRepositoryMockRecorder) AddEventVote(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEventVote", reflect.TypeOf((*MockRepository)(nil).AddEventVote), arg0, arg1, arg2)
}

// FindFollowers mocks base method
func (m *MockRepository) FindFollowers(arg0 int) ([]models.UserGeneral, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindFollowers", arg0)
	ret0, _ := ret[0].([]models.UserGeneral)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindFollowers indicates an expected call of FindFollowers
func (mr *MockRepositoryMockRecorder) FindFollowers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindFollowers", reflect.TypeOf((*MockRepository)(nil).FindFollowers), arg0)
}
